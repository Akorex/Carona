openapi: 3.0.3
info:
  title: Carona
  version: 1.0.0
  contact: {}
servers:
  - url: http://localhost
paths:
  /:
    get:
      summary: GET HOME
      description: GET HOME
      operationId: getHome
      responses:
        '200':
          description: ''
  /api/v1/auth/register:
    post:
      summary: REGISTER USER
      description: REGISTER USER
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: akoredeadewole3@gmail.com
                firstName:
                  type: string
                  example: Akorede
                gender:
                  type: string
                  example: Male
                lastName:
                  type: string
                  example: Adewole
                password:
                  type: string
                  example: breadandbeans
                passwordConfirm:
                  type: string
                  example: breadandbeans
                phoneNumber:
                  type: string
                  example: '09060138509'
            examples:
              REGISTER USER:
                value:
                  email: akoredeadewole3@gmail.com
                  firstName: Akorede
                  gender: Male
                  lastName: Adewole
                  password: breadandbeans
                  passwordConfirm: breadandbeans
                  phoneNumber: '09060138509'
      responses:
        '200':
          description: ''
  /api/v1/auth/login:
    post:
      summary: LOGIN USER
      description: LOGIN USER
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: akoredeadewole3@gmail.com
                password:
                  type: string
                  example: caronaworksfine
            examples:
              LOGIN USER:
                value:
                  email: akoredeadewole3@gmail.com
                  password: caronaworksfine
      responses:
        '200':
          description: ''
  /api/v1/auth/change-password:
    patch:
      summary: CHANGE PASSWORD
      description: CHANGE PASSWORD
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  example: caronaworksfine
                newPassword:
                  type: string
                  example: manofsteeel
            examples:
              CHANGE PASSWORD:
                value:
                  currentPassword: caronaworksfine
                  newPassword: manofsteeel
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /api/v1/auth/forgot-password:
    post:
      summary: FORGOT PASSWORD
      description: FORGOT PASSWORD
      operationId: forgotPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: akoredeadewole3@gmail.com
            examples:
              FORGOT PASSWORD:
                value:
                  email: akoredeadewole3@gmail.com
      responses:
        '200':
          description: ''
  /api/v1/dashboard/notifications/661fc0eed4f83584bf7a52a9:
    get:
      summary: GET NOTIFICATION
      description: GET NOTIFICATION
      operationId: getNotification
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /api/v1/dashboard/notifications:
    get:
      summary: GET ALL NOTIFICATIONS
      description: GET ALL NOTIFICATIONS
      operationId: getAllNotifications
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /api/v1/auth/verifyUser:
    post:
      summary: VERIFY USER ACCOUNT
      description: VERIFY USER ACCOUNT
      operationId: verifyUserAccount
      parameters:
        - name: email
          in: query
          schema:
            type: string
            example: akoredeadewole3%40gmail.com
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: number
                  example: 842988
            examples:
              VERIFY USER ACCOUNT:
                value:
                  token: 842988
      responses:
        '200':
          description: ''
  /api/v1/dashboard/payments/pay:
    post:
      summary: PAY TICKET
      description: PAY TICKET
      operationId: payTicket
      requestBody:
        content:
          application/json:
            examples:
              PAY TICKET:
                value: ''
      responses:
        '200':
          description: ''
      security:
        - bearerAuth: []
  /api/v1/auth/google/signin:
    get:
      summary: SIGN-IN GOOGLE
      description: SIGN-IN GOOGLE
      operationId: signInGoogle
      responses:
        '200':
          description: ''
  /api/v1/auth/reset-password:
    post:
      summary: RESET PASSWORD
      description: RESET PASSWORD
      operationId: resetPassword
      parameters:
        - name: token
          in: query
          schema:
            type: string
            example: 03ca4cbc3bc74de617c84001f323397a35013b0cd0d5093204d6a1f7cffcaf70
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  example: caronaworksfine
            examples:
              RESET PASSWORD:
                value:
                  newPassword: caronaworksfine
      responses:
        '200':
          description: ''
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags: []
